# ============================================================================
# PRE-COMMIT HOOKS - Automatic Code Quality Checks
# ============================================================================

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Ensure files end with newline
      - id: check-yaml
        name: Check YAML files
      - id: check-toml
        name: Check TOML files
      - id: check-json
        name: Check JSON files
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-added-large-files
        name: Check for large files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-docstring-first
        name: Check docstring placement
      - id: debug-statements
        name: Check for debug statements
      - id: name-tests-test
        name: Ensure test files are named correctly
        args: ["--django"]

  # Black - Code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3
        args: ["--line-length=100"]

  # isort - Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ["--profile=black", "--line-length=100"]

  # flake8 - Style guide enforcement
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        name: Lint with flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear
        args: ["--config=.flake8"]

  # mypy - Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.0
    hooks:
      - id: mypy
        name: Type check with mypy
        additional_dependencies:
          - types-requests
          - types-python-dateutil
        args: ["--config-file=pyproject.toml"]

  # bandit - Security linting
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Security check with bandit
        args: ["--config=pyproject.toml", "-f", "json"]
        exclude: tests/

  # pylint - Comprehensive linting
  - repo: https://github.com/pycqa/pylint
    rev: v2.17.5
    hooks:
      - id: pylint
        name: Lint with pylint
        args: ["--rcfile=pyproject.toml"]
        additional_dependencies:
          - python-telegram-bot
          - requests
          - python-dotenv

  # Check for common Python mistakes
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        name: Remove unused imports and variables
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # Check for security vulnerabilities in dependencies
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        name: Check for security vulnerabilities

  # Check commit message format
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.4.0
    hooks:
      - id: conventional-pre-commit
        name: Check commit message format
        stages: [commit-msg]

# Configuration
default_language_version:
  python: python3.9

# Exclude patterns
exclude: |
  (?x)^(
      \.git/|
      \.venv/|
      venv/|
      env/|
      build/|
      dist/|
      .*\.egg-info/|
      \.tox/|
      \.pytest_cache/|
      \.mypy_cache/|
      __pycache__/
  )

# Fail fast - stop on first failure
fail_fast: false

# Use system python instead of creating new environments for speed
default_install_hook_types: [pre-commit, commit-msg]
default_stages: [commit]
